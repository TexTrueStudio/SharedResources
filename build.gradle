plugins {
    //id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'dev.architectury.loom' version '0.12.0-SNAPSHOT'
    id 'maven-publish'
}

loom {
    runConfigs.configureEach {
        ideConfigGenerated = true
    }

    accessWidenerPath = file("src/main/resources/shared-resources.accesswidener")
}

// stuff that applies to all projects
allprojects {
    apply plugin: "maven-publish"
    apply plugin: "dev.architectury.loom"

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 8
    }

    java {
        withSourcesJar()
    }

    version = project.mod_version
    group = project.maven_group

    // add repos for all projects
    repositories {
        maven { url 'https://maven.enjarai.nl/mirrors' }

        maven {
            name "Terraformers Maven"
            url 'https://maven.terraformersmc.com'
        }
        maven {
            name "Shedaniel Maven"
            url "https://maven.shedaniel.me/"
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content { includeGroup "maven.modrinth" }
        }
    }

    // floader needs to be in every sub module
    dependencies {
        //modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
        modImplementation "net.minecraftforge:forge:${project.common_minecraft_version}-${project.common_forge_version}"
    }

    processResources {
        inputs.property "version", version

        filesMatching("META-INF/mods.toml") {
            expand "version": version
        }
    }
}

dependencies {
    // dummy versions
    minecraft "com.mojang:minecraft:${project.common_minecraft_version}"
    mappings "net.fabricmc:yarn:${project.common_yarn_mappings}:v2"

    //modCompileOnly "com.terraformersmc:modmenu:${project.common_modmenu_version}"
    modCompileOnly("me.shedaniel.cloth:cloth-config-forge:${project.common_cloth_config_version}")

    api(project(path: ":shared-resources-api", configuration: "namedElements")) {
        exclude group: "net.minecraftforge", module: "forge"
    }

    api(include("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"))
    annotationProcessor("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}")

    subprojects.forEach((project) -> {
        include(project) {
            transitive = false
        }
    })
}

// stuff that applies to all sub projects
subprojects {
    // skip our API module
    if (it.name == "shared-resources-api") return

    dependencies {
        // include the root project because that's where our common code is
        implementation(project(path: ":", configuration: "namedElements")) {
            // having 2 floaders from the sub project and root project causes issues so we get rid of one.
            exclude group: "net.minecraftforge", module: "forge"
        }
    }
}

publishing {
    repositories {
    }

    publications {
        mavenJava(MavenPublication) {
            groupId = maven_group
            artifactId = archives_base_name
            version = mod_version

            from components.java
        }
    }
}